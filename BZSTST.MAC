	.TITLE BZSTST
	.SBTTL POWERON
	.GLOBL WTCHDG,SKCTL,PWRON
	.GLOBL HALT,ST.BIT,VSTOP,SOUND
	.GLOBL MAIN,POKEY,CHAN3F,CHAN4F
	.GLOBL CHAN1F,CHAN2F,CHAN1V,CHAN2V
	.GLOBL INITLS,HSCTBL,BATINT
	.GLOBL VGCNTR,VGVTR,VGSTAT,VGJSRL
	.GLOBL MBOXIN,MBSTAT,OPTION,OPTON2
	.GLOBL VGMSGA,VGVTR1,VGHEX,VGHEXZ
	.GLOBL VGADD2,VGHALT,DIGTYS,DIGT2S
	.GLOBL DIGITS,GOADD,POTGO,ALLPOT
	.GLOBL MSTAT,MOUTHI,MOUTLO,HATCH
	.GLOBL NMI,YLOW,YHIGH
	
	.GLOBB ACTION,GOVER,TEMP1,TEMP2
	.GLOBB TEMP3,PNTTBL,VGSIZE,VGBRIT
	.GLOBB VGLIST,SAVE0,SAVE1
	
	.ENABL AMA
	.RADIX 16
	.CSECT BZSTST
VECRAM	=2000
HSCNUM	=10.
	
VGROM	=3000
PRGROM	=5000
	.MACRO LAH ADDR
	LDA I,0
	.=.-1
	.ENABL M68
	.WORD ADDR
	.DSABL M68
	.=.-1
	.ENDM
	
	.MACRO LXL ADDR
	LDX I,0
	.=.-1
	.WORD ADDR
	.=.-1
	.ENDM
	
	.INCLUDE ASCVG	;<<<<<<<<<<<<<<<<<<<<<<<<<
	.PAGE
	.INCLUDE VGMC	;<<<<<<<<<<<<<<<<<<<<<<<
PWRON:	LDX I,7F		;C  INIT STACKF
	TXS
	LDA I,0
	STA SKCTL
	CLD
	TAX
10$:	STA ZX,0		;C  CLEAR RAM PAGES
	INX
	BNE 10$
	LDY I,7			;C RESET POKEY
	STY SKCTL
12$:	STA AX,100
	STA AX,200
	STA AX,300
	STA AX,VECRAM
	STA AX,VECRAM+100
	STA AX,VECRAM+200
	STA AX,VECRAM+300
	STA AX,VECRAM+400
	STA AX,VECRAM+500
	STA AX,VECRAM+600
	STA AX,VECRAM+700
	STA AX,VECRAM+800
	STA AX,VECRAM+900
	STA AX,VECRAM+0A00
	STA AX,VECRAM+0B00
	STA AX,VECRAM+0C00
	STA AX,VECRAM+0D00
	STA AX,VECRAM+0E00
	STA AX,VECRAM+0F00
	STA WTCHDG
	INX
	BNE 12$
	STA VSTOP		;C  RESET VECTOR GEN
	LDA HALT		;D  IF SELF TEST
	AND I,ST.BIT
	BNE 15$
	LDA I,20		;C  ENABLE SOUNDS
	STA SOUND
	JMP RAMTST
15$:	LDA I,1			;C  INIT VG BUFFER
	STA VECRAM
	LDA I,0E4
	STA VECRAM+1
	LDA I,20
	STA VECRAM+2
	STA VECRAM+3
	STA VECRAM+802
	STA VECRAM+803
	LDA I,1			;C  INIT GAME STATE
	STA Z,ACTION
	STA Z,GOVER
	LDA I,-2		;C  SET UP BUZZ BOMB SOUND
	STA CHAN3F
	INX
	STA CHAN4F
	LDX I,<HSCNUM*3>-1
	LDY I,0
20$:	LDA AX,FDGTBL-2		;C  INIT HIGH SCORE TABLE
	STA AX,INITLS-2
	LDA I,5
	STA AX,HSCTBL-2
	LDA AX,FDGTBL-1
	STA AX,INITLS-1
	LDA AX,FDGTBL
	STA AX,INITLS
	INY
	DEX
	DEX
	DEX
	BPL 20$
	JSR BATINT		;C  INIT FOR LOGO
	JMP MAIN
	
FDGTBL:	.ASCVG	<EDRMPHJEDDESTKEVKBEL HADORRGJR >
	.=.-1
CHKS7:	.BYTE 0E3
	.PAGE
	.SBTTL DISPLAY DIGITS
;
;DIGITS - DISPLAY 2Y DIGIT NUMBERS
;
;ENTRY	(C)=CARRY SET FOR ZERO SUPPRESSION
;	(A)=ADDRESS OF (Y) ZERO PAGE LOCATIONS CONTAINING NUMBER (LSB TO MSB)
;	(Y)=NUMBER OF ZERO PAGE LOCATIONS TO USE (1 TO 256).
DIGT2S:	LDY I,2
DIGTYS:	SEC
DIGITS:	PHP			;SAVE INPUT PARAMETERS
	DEY
	STY TEMP1+1
	CLC
	ADC TEMP1+1
	PLP
	TAX			;MSB OF DIGITS
10$:	PHP
	STX TEMP1		;SAVE DIGIT ZP OFFSET
	LDA ZX,0
	LSR
	LSR
	LSR
	LSR
	PLP
	JSR VGHEXZ		;FIRST DIGIT
	LDA TEMP1+1
	BNE 20$
	CLC			;DISPLAY LAST DIGIT (EVEN 0)
20$:	LDX TEMP1
	LDA ZX,0
	JSR VGHEXZ		;SECOND DIGIT
	LDX TEMP1
	DEX
	DEC TEMP1+1
	BPL 10$			;LOOP FOR EACH SET OF DIGITS
	RTS
	.PAGE
	.SBTTL ZERO-PAGE TEST

RAMTST:	LDX	I,11		;BEGINNING PATTERN
	TXS			;S HOLDS PATTERN
	TXA
	STA	Z,0		;TEST CELL START @ 0
	LDY	I,0
2$:	LDX	I,1		;ONE LESS COUNT BEFORE IT WRAPS
3$:	INY			;SCAN FORWARD
	LDA	AY,0		;ZERO ?
	BNE	5$		;NO - ERROR (HIGH BITS BAD)
	INX			;CHK HOW FAR SCANNED
	BNE	3$		;BRANCH - CONTINUE
	TSX
	TXA			;ACC = PATTERN
	STA	A,WTCHDG	;WTCHDGDOG
	INY			;POINT TO TEST CELL
	EOR	AY,0		;DOES IT HAVE PATTERN ?
	BNE	5$		;N0 - ERROR (HIGH BITS BAD)
	TXA			;ACC = PATTERN
	LDX	I,0
	STX	ZY,0		;ELSE - CLEAR CELL
	INY			;POINT TO NEXT TEST CELL
	BNE	4$		;IF PASS NOT COMPLETE
	ASL			;ELSE SHIFT PATTERN
	LDX	I,0		;IF DONE (0 = GOOD)
	BCS	STOP0		;BRANCH - DONE (GOOD)
4$:	TAX			;PATTERN -> X
	TXS			;	 -> S
	STX	ZY,0		;	 -> NEXT TEST CELL
	BNE	2$		;ALWAYS - REPEAT SCAN
5$:	TAX			;ANY HIGH BITS INDICATE BAD RAM
7$:	TXA
	LDY	I,82		;ASSUME LOW NIBBLE IS GOOD
	AND	I,0F		;CHECK IT
	BEQ	8$		;BRANCH - LOW NIBBLE GOOD
	LDY	I,12		;ELSE - SET Y ACCORDINGLY
8$:	TXA
	LDX	I,82		;ASSUME TOP NIBBLE IS GOOD
	AND	I,0F0		;CHECK IT
	BEQ	9$		;BRANCH - TOP NIBBLE GOOD
	LDX	I,12		;ELSE - SET X
9$:
	TYA
	TXS			;S = HIGH NIBBLE STATUS
	TAX			;X = LOW
RT.LP:	STX	A,POKEY		;NOISE = LOWER NIBBLE STATUS
	LDX	I,0A8
	STX	A,POKEY+1
	LDY	I,12.		;Y = HIGH BYTE OF COUNTER
10$:	LDX	I,100.		;X = LOW BYTE OF COUNTER
11$:	BIT	A,HALT
	BMI	11$		;BIT 7 (SIGN FLAG) OF HALT = 3000 HZ SQUARE WAVE
12$:	BIT	A,HALT
	BPL	12$
	STA	A,WTCHDG
	DEX
	BNE	11$		;INNER LOOP 255 * 333 US = 85 MS
	CPY	I,5
	BNE	13$
	STX	A,POKEY+1	;CLR NOISE
13$:	DEY
	BNE	10$		;OUTER LOOP 8 *  85 MS = 580 MS
	LSR			;TEST SIGN
	BCS	14$		;DONE
	TSX
	BNE	RT.LP		;ALWAYS
14$:
	STA	A,WTCHDG		;WTCHDGDOG
	JMP	14$		;LOCKUP - BAD ZP RAM
STOP0:	LDX	I,7F
	TXS			;INITIALIZE STACK (USED IN ROM TESTS)
	LDX I,0
	TXA
10$:	STA ZX,0		;ZERO ZERO-PAGE
	INX
	BNE 10$
	.PAGE
;
;	VECTOR GEN RAM TEST
;
	.SBTTL	VG RAM TEST
;
;
;
STEST1:	TAY
	LDA	I,1
5$:	STA	1		;START @ PAGE 1 (NY,0)
10$:	LDX	I,11		;STARTING PATTERN
	LDA	NY,0		;D  IF BAD CELL
	BNE 	20$
15$:	TXA
	STA	NY,0		;WRITE
	EOR	NY,0		;AND COMPARE
	BNE	20$		;ERROR
	TXA
	ASL
	TAX
	BCC	15$		;NEXT PATTERN
	INY
	BNE	10$		;NEXT LOCATION
	STA	A,WTCHDG	;MUZZLE THAT BEAST
	INC	1
	LDX	1
	CPX	I,04		;PAGES 1 TO 3
	BCC	10$		;CHECK NEXT PAGE
	LDA	I,VECRAM/100
	CPX	I,VECRAM/100
	BCC	5$		;BEGIN NEXT @ 2000
	CPX	I,VECRAM/100+10
	BCC	10$		;CHECK UP TO 2FFF
	JMP	STEST3		;RAM IS GOOD
20$:	LDX	1		;X = MSB (ADDRESS) ACC=BAD PATTERN
	CPX	I,VECRAM/100
	STA	2
	BCC	30$
	TXA
	SBC	I,<VECRAM/100>-4
30$:	LSR
	LSR
	AND	I,7
	TAY			;Y = # OF 1K BLOCK BAD
	LDA 	2
STEST2:	STY	0		;0 = BAD RAM #
	STA	1		;1 = BAD BITS
5$:	LDA 	I,1
	STA	2
10$:	LDX	I,0A8
	LDY	I,82		;ASSUME GOOD RAM
	LDA	0
	BNE	30$		;IT IS
	LDA	1
	AND	I,0F		;LOW NIBBLE
	BEQ	30$		;GOOD
20$:	LDY	I,12		;BAD
30$:	STX	A,POKEY+1	;TONE/VOLUME
	STY	A,POKEY		;FREQUENCY
	LDA	I,9		;BAD
	CPY	I,12
	BEQ	35$		;YES
	LDA	I,1
35$:	TAY
	LDX	I,0
40$:	BIT	A,HALT
	BMI	40$
42$:	BIT 	A,HALT
	BPL	42$
	STA	A,WTCHDG	;NO WTCHDGIN' DOG
	DEX
	BNE	40$		;COUNT 256/3000 OF A SECOND
	DEY
	BNE	40$
	STX	A,POKEY+1	;CLR SOUND
	LDY	I,9
50$:	BIT	A,HALT
	BMI	50$
52$:	BIT	A,HALT
	BPL	52$
	STA	A,WTCHDG		;NO WTCHDGDOG
	DEX
	BNE	50$		;256/3000
	DEY
	BNE	50$
	LDA	0
	BNE	60$
	LDA	1
	LSR
	LSR
	LSR
	LSR
	STA	1
60$:	DEC	2
	BEQ	10$
	DEC 0
	BPL	5$		;ALWAYS
STOP1:	STA	A,WTCHDG	;NO WTCHDGDOG
	JMP	STOP1
;
	.PAGE
	.SBTTL ROM TEST
;
;	ROM TEST
;
STEST3:	LDA	I,0		;EOR CKSUM ROMS
	TAY
	TAX
	STA	TEMP1
	LDA	I,VGROM/100
5$:	STA	TEMP1+1
	LDA	I,8
	STA	TEMP2		;8 PAGES
	LDA	I,0FF		;CKSUMS SHOULD BE FF
10$:	EOR 	NY,TEMP1
	INY
	BNE	10$
	INC	TEMP1+1
	STA	A,WTCHDG	;NO WTCHDGDOG
	DEC	TEMP2
	BNE	10$		;8 PAGES / ROM
	STA	ZX,PNTTBL	;CKSUMS @ TEMP3
	INX
	LDA	TEMP1+1
	CMP	I,<VGROM/100>+10	;4K OF VGROM
	BNE	15$
	LDA 	I,PRGROM/100
	STA 	TEMP1+1
15$:	CMP	I,80
	BCC	5$
	LDX 	I,-1		;C  ASSUME STEST
	LDA	HALT		;D  IF NOT DIAG PRESSED
	AND	I,20
	BNE	20$
	INX			;C  START AT DIAG
20$:	STX	TEMP3		;C  SET STEP #
;
INCLUDE = 1
$STAT	=1
;
	.INCLUDE MBDIAG		;<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
;
;
	BCS	30$		;ERROR IN MATHBOX
	LDA	I,0
30$:	STA	TEMP3+1		;MB TEST RESULT
	LDA	PNTTBL
	BEQ	40$		;VGROM IS OK
	LDA	I,0F0		;ELSE SOUND
	LDX	I,0A2
	STA	A,POKEY
	STX	A,POKEY+1
40$:	LDA	I,2
	STA	VGSIZE		;SCALE FACTOR
	LDA	I,0
	STA	VGBRIT		;CLR BRIGHTNESS
;
; (SAVE0) = SWITCH CLOSURES
; (TEMP2,+1) = SCRATCH
; (PNTTBL,+6) = 7 CHKSUMS FOR ROMS
; (TEMP3)    = DIAG STEP #
; (TEMP3+1)  = MB STATUS (0 = NO ERRORS, ELSE 'T,'L, OR 'H)
; (SAVE0&SAVE1)=DEBOUNCE FIRE (DIAGNOSTICS)
;
STEST4:	LDX	I,28		;SET FOR 16MS BEST CASE
5$:	BIT	A,HALT
	BPL	5$
7$:	BIT	A,HALT
	BMI	7$
	DEX
	BPL	5$		;WAIT FOR COUNT
10$:	BIT	A,HALT
	BVC	10$		;IF NO HALT, WTCHDGDOG WILL RESET
	STA	A,WTCHDG		;MUZZLE THE DOG
	LDA	I,VECRAM&0FF
	STA	VGLIST
	LDA	I,VECRAM&0FF00/100
	STA	VGLIST+1
	BIT	TEMP3		;D  IF NOT IN DIAGNOSTIC
	BMI 	STEST6
	JSR 	VGCNTR		;C  OPEN WINDOW
	LDA	I,-127.
	TAX
	LDY	I,0
	JSR 	VGVTR
	LDA 	I,0
	JSR	VGSTAT
	JSR	VGCNTR
	LDA	I,127.
	TAX
	LDY	I,0
	JSR 	VGVTR
	LDA	I,2
	JSR	VGSTAT
	LDX	TEMP3		;1 TO 4
20$:	LDY	AX,DIAGS	;LENGTH OF TEST
	LDA	I,20
	STA	NY,VGLIST	;ADD HALT @ END
	DEY
	DEY
30$:	LDA	AY,DIATST	;COPY IN TEST PATTERN
	STA	NY,VGLIST
	DEY
	BPL	30$
	JMP	STEST7		;CHECK SELF TEST SWITCH
;
;
;
STEST6:	LAH	HATCH
	LXL	HATCH
	JSR	VGJSRL
	JSR	VGCNTR		;CENTER BEAM
	LDA	I,-504./4
	LDX	I,-358./4
	JSR	VGVTR1		;POSITION BEAM
	LAH	VGMSGA
	LXL	VGMSGA
	JSR	VGJSRL		;DISPLAY ALPHABET
	JSR	VGCNTR		;CENTER BEAM
	LDA	I,-182./4
	LDX	I,78./4
	JSR	VGVTR1		;POSITION BEAM
	LDX	I,15.
	LDA	A,OPTION
	EOR	I,0FF
	STA	TEMP2+1
	LDA	A,OPTON2
	EOR	I,0FF
10$:	PHA
	STX	TEMP2
	AND	I,1
	JSR	VGHEX		;DISPLAY 0 OR 1
	LDX	TEMP2
	LSR	TEMP2+1
	PLA
	ROR
	DEX
	BPL	10$		;DO ALL 16 OPTION SWITCHES
	JSR	VGCNTR		;CENTER BEAM
	LDA	I,-20./4
	LDX	I,116./4
	JSR	VGVTR1		;POSITION BEAM
	LDA	I,1
	JSR	VGHEX		;1 FOR LEFT COIN MECH
	LDA	A,OPTON2
	AND	I,10
	LSR
	LSR
	LSR
	LSR			;0 OR 1
	ADC	I,1		;1 OR 2
	JSR	VGHEX		;PUT CENTER MECH VALUE
	LDA	A,OPTON2
	AND	I,0C
	LSR
	LSR
	TAX
	LDA	AX,STEST8
	JSR	VGHEX		;DOLLAR MECH VALUE
	LDX	I,88./4
	STX	TEMP2+1		;STARTING Y VALUE CHECK SUMS
	LDX	I,7
20$:	LDA	ZX,PNTTBL
	BEQ	30$
	STA	0
	STX	TEMP2		;SAVE CHKSUM #
	JSR	VGCNTR		;CENTER BEAM
	LDX	TEMP2+1
	TXA
	SEC
	SBC	I,08		;32. BELOW CURRENT LINE
	STA	TEMP2+1
	LDA	I,-384./4
	JSR	VGVTR1		;POSITION BEAM
	LDA	TEMP2
	JSR	VGHEX		;ROM #
	LDA	I,24./4
	LDX	I,0
	JSR	VGVTR1
	LDA	I,0
	LDY	I,1
	JSR	DIGTYS		;DISPLAY 2 DIGITS
	LDX	TEMP2
30$:	DEX
	BPL	20$		;LOOP THROUGH ALL ROMS
	JSR	VGCNTR		;CENTER BEAM
	LDA	I,384./4
	LDX	I,88./4
	JSR	VGVTR1		;POSITION BEAM
	LDA	TEMP3+1
	BEQ	40$		;NO MB ERRORS
	SEC
	SBC	I,36		;A IS 11. IN VGMSGA TABLE
	ASL
	TAY
	LDA	AY,VGMSGA
	LDX	AY,VGMSGA+1
	JSR	VGADD2		;PUT UP ERROR CODE
40$:	JSR	VGHALT		;& HALT
;
;FALL THRU TO SWITCH TEST
;
	.PAGE
	.SBTTL SWITCH TEST
STEST7:
	STA GOADD		;C  START VG
	BIT TEMP3		;D  IF IN DIAG
	BPL 60$
	JSR DIAGDB		;D  IF DIAG
	BNE 65$
	STA POTGO
	LDY I,0
	LDA ALLPOT
	AND I,7F
10$:	LSR
	BCC 15$
	INY
15$:	ORA I,0
	BNE 10$
	LDA HALT
	AND I,0F
	EOR I,0F
20$:	LSR
	BCC 25$
	INY
25$:	ORA I,0
	BNE 20$
	CPY SAVE0
	BEQ 30$			;D  IF NO CHANGE
	LDA I,0A7
	BCC 35$			;D  IF ONE WENT ON
	LDX I,80		;C  INDICATE ONE OFF
	BNE 40$
30$:	LDA I,0			;C  NO SOUND
	BEQ 40$
35$:	LDX I,20		;C  INDICATE ONE ON
40$:	STY SAVE0		;C  SAVE COUNT
	STA CHAN2V		;C  SOUND!
	STX CHAN2F
	LDA HALT
	AND I,ST.BIT
	BNE 50$			
45$:	JMP MBDIAG
50$:	JMP PWRON
60$:	JSR DIAGDB
	BEQ 45$			;D  IF NOT PUSHED
65$:	INC TEMP3		;C  NEXT DIAG STEP
	LDA TEMP3
	AND I,0FC
	BEQ 45$
70$:	LDA I,0			;C  CLOSE WINDOW
	STA WTCHDG
	STA SOUND
	STA MBOXIN		;C  CLOCK IT
	STA POKEY		;C  HIT ALL OTHER DECODES
	LDA MSTAT
	LDA MOUTHI
	LDA MOUTLO
	LDA I,1
	STA SOUND		;C  OPEN WINDOW
	LDX I,1F
	CLC
75$:	STA AX,MBOXIN		;C  SCAN
	ROL
	DEX
	BPL 75$
	JSR DIAGDB		;D  IF NOT PUSHED
	BEQ 70$
	JMP PWRON
DIAGDB:	LDA HALT		;C  CATCH EDGE
	TAY
	EOR SAVE1
	AND SAVE1
	STY SAVE1
	AND I,20 
	RTS
;
STEST8:	.BYTE	1,4,5,6		;DOLLAR MECH MULTIPLIERS
;
	.SBTTL VGDIAG TEST ROUTINES
;
;
	.RADIX 10
	.DIAG	=7
;
DIAGS:	.BYTE	13,17,23,45
;
DIATST:	CNTR
	VCTR	-512,-384,0
	VCTR	1023,767,.DIAG
	CNTR
	VCTR	30,-30,0
	VCTR	-30,30,.DIAG
	JMPL	1$-DIATST+16	;JMPL TEST
	HALT			;(FAILURE=HALT)
1$:	VCTR	-30,30,.DIAG
	JSRL	2$-DIATST+16	;JSRL TEST
	VCTR	0,-30,.DIAG
	HALT
2$:	JSRL	3$-DIATST+16
	RTSL
3$:	JSRL	4$-DIATST+16
	RTSL
4$:	JSRL	5$-DIATST+16
	RTSL
5$:	VCTR	30,0,.DIAG
	RTSL
	.RADIX 16
	.VCTRS 7FFA,NMI,PWRON,PWRON
	.END
                                                                            